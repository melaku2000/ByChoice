@model ByChoice.Models.Agent
@using ByChoice.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ApplicationUser user = (ApplicationUser)ViewBag.Id;

}

<h2>Create</h2>

<dl class="dl-horizontal">
    <dt>
        Full Name
    </dt>
    <dd>
        @user.FullName
    </dd>
    <dt>
        Phone No
    </dt>
    <dd>
        @user.PhoneNumber
    </dd>
    <dt>
       E-mail
    </dt>
    <dd>
        @user.Email
    </dd>
    </dl>
    @using (Html.BeginForm("Create", "Agent", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("Id", user.Id)
        <div class="form-horizontal">
            <h4>Agent</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                    <label class="control-label col-md-2" for="Id">Agent</label>
                    <div class="col-md-10">
                        @Html.DropDownList("Id", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.AgentName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AgentName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AgentName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2" for="AgentCatagoryId">Catagory</label>

                @*@Html.LabelFor(model => model.AgentCatagoryId, "AgentCatagoryId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.DropDownList("AgentCatagoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AgentCatagoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })*@

                    <input class="agentPhoto" type="file" name="ImageData" id="ImageData" multiple onchange="fileCheck(this);" />
                    @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            function fileCheck(obj) {
                var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
                if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                    alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
                }
            }
        </script>
    }
