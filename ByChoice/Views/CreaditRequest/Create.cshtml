@*@model ByChoice.Models.CreaditRequest*@
@model ByChoice.Models.CreaditRequestViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>CreaditRequest</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-md-5">
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Customer.FullName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.CustomerPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Customer.CustomerPhone)
            </div>
        </div>
    </div>
    @if (Model.Micro != null)
    {
        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.Micro.MicroName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Micro.MicroName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Micro.IntrestRate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Micro.IntrestRate)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Micro.ApplicationUser.Region.RegionName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Micro.ApplicationUser.Region.RegionName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Micro.MicroName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Micro.MicroName)
                </div>
            </div>

        </div>
    }

    <div class="form-group">
        <label class="control-label col-md-2" for="MicroId">Select Micro-Finance</label>

        @*@Html.LabelFor(model => model.Micro.Id, "MicroId", htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.DropDownList("MicroId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Micro.Id, "", new { @class = "text-danger" })
        </div>
    </div>
    @*
        <div class="form-group">
            @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Decline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Decline)
                    @Html.ValidationMessageFor(model => model.Decline, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Approved, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Approved)
                    @Html.ValidationMessageFor(model => model.Approved, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApprovedDeclineDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApprovedDeclineDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApprovedDeclineDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreaditConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CreaditConfirmed)
                    @Html.ValidationMessageFor(model => model.CreaditConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Delivered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Delivered)
                    @Html.ValidationMessageFor(model => model.Delivered, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.New, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.New)
                    @Html.ValidationMessageFor(model => model.New, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSelected, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSelected)
                    @Html.ValidationMessageFor(model => model.IsSelected, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    *@
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
