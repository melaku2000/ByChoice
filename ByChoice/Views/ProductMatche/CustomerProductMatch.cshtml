@model ByChoice.Models.ProductMatch
@using ByChoice.Models
@{
    ViewBag.Title = "CustomerProductMatch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Solar Match</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product Match</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.ProductModelId, "ProductModelId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductModelId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductModelId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.NoLight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoLight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoLight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Radio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Radio)
                    @Html.ValidationMessageFor(model => model.Radio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FlashLight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.FlashLight)
                    @Html.ValidationMessageFor(model => model.FlashLight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TvSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TvSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TvSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudyLight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.StudyLight)
                    @Html.ValidationMessageFor(model => model.StudyLight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomeUse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HomeUse)
                    @Html.ValidationMessageFor(model => model.HomeUse, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TravelingLight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TravelingLight)
                    @Html.ValidationMessageFor(model => model.TravelingLight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Match" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@{ 
    IEnumerable<ProductModel> product = (IEnumerable<ProductModel>)ViewBag.MatchResult;
    if (product != null)
    {
    <table>
        @foreach(var p in product)
        {
        <tr>
            <td>
                <dl>
                    <dt>
                        @p.ModelName
                    </dt>

                    <dd>
                        <img src="/ProductModel/RetrieveImage/@p.ProductModelId" alt="" height=135 width=200 />
                    </dd>
                </dl>
            </td>
        </tr>
        }
    </table>
    }
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
